[tool.poetry]
name = "dbt-audit-helper-ext"
version = "0.0.0"
description = "Extended audit helper ðŸ’ª"
authors = ["Infinite Lambda <contact@infinitelambda.com>"]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/infinitelambda/dbt-audit-helper-ext"
homepage = "https://infinitelambda.com"
keywords = ["packaging", "dbt", "data-quality", "audit-helper", "markdown", "lint", "migration", "data-diff"]
classifiers = [
  "Topic :: dbt Package Development :: Documentation",
  "Topic :: dbt Package Development :: Testing",
  "Topic :: dbt Package :: Validation",
  "Topic :: dbt Package :: Migration",
]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
dbt-core = "^1.7.0"
dbt-snowflake = "^1.7.0"
dbt-bigquery = "^1.7.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.17.0"
poethepoet = "^0.16.4"
sqlfluff = "^2.3.5"
sqlfluff-templater-dbt = "^2.3.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.sqlfluff.core]
templater = "dbt"
dialect = "snowflake"
sql_file_exts = ".sql,.sql.j2,.dml,.ddl"
max_line_length = 120

[tool.sqlfluff.templater.dbt]
profile = "audit_helper_ext"

[tool.sqlfluff.rules]
allow_scalar = true
single_table_references = "consistent"
unquoted_identifiers_policy = "all"

[tool.sqlfluff.layout.type.comma]
line_position = "leading"

[tool.sqlfluff.indentation]
tab_space_size = 2
indent_unit = "space"

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "lower"

[tool.sqlfluff.rules.capitalisation.functions]
capitalisation_policy = "lower"

[tool.sqlfluff.templater]
unwrap_wrapped_queries = true

[tool.sqlfluff.templater.jinja]
apply_dbt_builtins = true

[tool.poe.tasks]
git-hooks = { shell = "pre-commit install --install-hooks && pre-commit install --hook-type commit-msg" }
format = [
  {cmd = "dbt clean"},
  {cmd = "dbt deps"},
  {cmd = "sqlfluff format . --dialect snowflake"},
]
lint = [
  {cmd = "dbt clean"},
  {cmd = "dbt deps"},
  {cmd = "sqlfluff lint . --dialect snowflake"},
]
verify = [
  {cmd = "dbt deps --project-dir integration_tests"},
  {cmd = "dbt debug --project-dir integration_tests"},
]
init = [
  {cmd = "dbt deps --project-dir integration_tests"},
  {cmd = "dbt run -s audit_helper_ext --project-dir integration_tests"},
  {cmd = "dbt seed --project-dir integration_tests"},
]
build = [
  {cmd = "dbt build --exclude audit_helper_ext --project-dir integration_tests"},
]
gen = [
  {shell = "cd integration_tests && python dbt_packages/audit_helper_ext/scripts/create_validation_macros.py models/03_mart"},
  {shell = "cd integration_tests && python dbt_packages/audit_helper_ext/scripts/create_dbt_jobs_as_code.py models/03_mart"}
]
validate-sample-1 = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m sample_1 -d models/03_mart/sample"}
]
validate-customers = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m customers -d models/03_mart/jaffle_shop"}
]
validate-items = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m items -d models/03_mart/jaffle_shop"}
]
validate-orders = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m orders -d models/03_mart/jaffle_shop"}
]
validate-products = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m products -d models/03_mart/jaffle_shop"}
]
validate-stores = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m stores -d models/03_mart/jaffle_shop"}
]
validate-supplies = [
  {shell = "cd integration_tests && dbt_packages/audit_helper_ext/scripts/validation__all.sh -m supplies -d models/03_mart/jaffle_shop"}
]
validate = [
  {cmd = "poe validate-sample-1"},
  {cmd = "poe validate-customers"},
  {cmd = "poe validate-items"},
  {cmd = "poe validate-orders"},
  {cmd = "poe validate-products"},
  {cmd = "poe validate-stores"},
  {cmd = "poe validate-supplies"},
]
all = [
  {cmd = "poe init"},
  {cmd = "poe validate"},
]
git-push-github = [
  {cmd = "git remote set-url origin https://github.com/infinitelambda/dbt-audit-helper-ext.git"},
  {cmd = "git push"},
  {cmd = "git remote set-url origin git@gitlab.infinitelambda.com:infinitelambda/bi-chapter/dbt-audit-helper-ext.git"}
]
git-pull-github = [
  {cmd = "git remote set-url origin https://github.com/infinitelambda/dbt-audit-helper-ext.git"},
  {cmd = "git pull"},
  {cmd = "git remote set-url origin git@gitlab.infinitelambda.com:infinitelambda/bi-chapter/dbt-audit-helper-ext.git"},
  {cmd = "git push"}
]
